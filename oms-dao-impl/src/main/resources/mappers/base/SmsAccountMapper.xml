<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.greatonce.oms.dao.base.SmsAccountMapper">
  <resultMap id="resultMap" type="com.greatonce.oms.domain.base.SmsAccount">
    <id column="sms_account_id" property="smsAccountId"/>
    <result column="created_time" property="createdTime"/>
    <result column="modified_time" property="modifiedTime"/>
    <result column="remark" property="remark"/>
    <result column="sms_account_name" property="smsAccountName"/>
    <result column="sms_account" property="smsAccount"/>
    <result column="sms_password" property="smsPassword"/>
    <result column="sms_product" property="smsProduct"/>
  </resultMap>
  <sql id="columns">created_time,modified_time,remark,sms_account_id,sms_account_name,sms_account,sms_password,sms_product</sql>
  <sql id="pkWhere">
    WHERE sms_account_id=#{_parameter}
  </sql>
  <sql id="equalWhere">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="createdTime!=null">AND created_time=#{createdTime}</if>
      <if test="modifiedTime!=null">AND modified_time=#{modifiedTime}</if>
      <if test="remark!=null and remark!=''">
        AND remark=#{remark}
      </if>
      <if test="smsAccountId!=null">AND sms_account_id=#{smsAccountId}</if>
      <if test="smsAccountName!=null and smsAccountName!=''">
        AND sms_account_name=#{smsAccountName}
      </if>
      <if test="smsAccount!=null and smsAccount!=''">
        AND sms_account=#{smsAccount}
      </if>
      <if test="smsPassword!=null and smsPassword!=''">
        AND sms_password=#{smsPassword}
      </if>
      <if test="smsProduct!=null and smsProduct!=''">
        AND sms_product=#{smsProduct}
      </if>
    </trim>
  </sql>
  <sql id="where">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="createdTimeBegin!=null">
        <![CDATA[AND created_time>=#{createdTimeBegin}]]>
      </if>
      <if test="createdTimeEnd!=null">
        <![CDATA[AND created_time<#{createdTimeEnd}]]>
      </if>
      <if test="modifiedTimeBegin!=null">
        <![CDATA[AND modified_time>=#{modifiedTimeBegin}]]>
      </if>
      <if test="modifiedTimeEnd!=null">
        <![CDATA[AND modified_time<#{modifiedTimeEnd}]]>
      </if>
      <if test="remark!=null and remark!=''">
        AND remark=#{remark}
      </if>
      <if test="smsAccountId!=null">AND sms_account_id=#{smsAccountId}</if>
      <if test="smsAccountName!=null and smsAccountName!=''">
        AND sms_account_name=#{smsAccountName}
      </if>
      <if test="smsAccount!=null and smsAccount!=''">
        AND sms_account=#{smsAccount}
      </if>
      <if test="smsPassword!=null and smsPassword!=''">
        AND sms_password=#{smsPassword}
      </if>
      <if test="smsProduct!=null and smsProduct!=''">
        AND sms_product=#{smsProduct}
      </if>
    </trim>
  </sql>
  <sql id="orderBy">
    ORDER BY sms_account_id DESC
  </sql>
  <insert id="insert" parameterType="com.greatonce.oms.domain.base.SmsAccount">
    INSERT INTO oms_sms_account(created_time,modified_time,remark,sms_account_id,sms_account_name,sms_account,sms_password,sms_product)
    VALUES(
    <trim suffixOverrides=",">
      now(),
      now(),
      #{remark},
      #{smsAccountId},
      #{smsAccountName},
      #{smsAccount},
      #{smsPassword},
      #{smsProduct},
    </trim>
    )
  </insert>
  <update id="update" parameterType="com.greatonce.oms.domain.base.SmsAccount">
    UPDATE oms_sms_account
    <trim prefix="SET" suffixOverrides=",">
      modified_time=now(),
      <if test="remark!=null">remark=#{remark},</if>
      <if test="smsAccountName!=null">sms_account_name=#{smsAccountName},</if>
      <if test="smsAccount!=null">sms_account=#{smsAccount},</if>
      <if test="smsPassword!=null">sms_password=#{smsPassword},</if>
      <if test="smsProduct!=null">sms_product=#{smsProduct},</if>
    </trim>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      AND sms_account_id=#{smsAccountId}
    </trim>
  </update>
  <update id="updateByExample" parameterType="com.greatonce.oms.domain.base.SmsAccount">
    UPDATE oms_sms_account
    <trim prefix="SET" suffixOverrides=",">
      modified_time=now(),
      <if test="record.remark!=null">
        remark=#{record.remark},
      </if>
      <if test="record.smsAccountName!=null">
        sms_account_name=#{record.smsAccountName},
      </if>
      <if test="record.smsAccount!=null">
        sms_account=#{record.smsAccount},
      </if>
      <if test="record.smsPassword!=null">
        sms_password=#{record.smsPassword},
      </if>
      <if test="record.smsProduct!=null">
        sms_product=#{record.smsProduct},
      </if>
    </trim>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="example.createdTime!=null">
      AND created_time=#{example.createdTime}
      </if>
      <if test="example.modifiedTime!=null">
      AND modified_time=#{example.modifiedTime}
      </if>
      <if test="example.remark!=null">
      AND remark=#{example.remark}
      </if>
      <if test="example.smsAccountId!=null">
      AND sms_account_id=#{example.smsAccountId}
      </if>
      <if test="example.smsAccountName!=null">
      AND sms_account_name=#{example.smsAccountName}
      </if>
      <if test="example.smsAccount!=null">
      AND sms_account=#{example.smsAccount}
      </if>
      <if test="example.smsPassword!=null">
      AND sms_password=#{example.smsPassword}
      </if>
      <if test="example.smsProduct!=null">
      AND sms_product=#{example.smsProduct}
      </if>
    </trim>
  </update>
  <delete id="delete">
    DELETE FROM oms_sms_account
    <include refid="pkWhere"/>
  </delete>
  <delete id="deleteByExample">
    DELETE FROM oms_sms_account
    <include refid="equalWhere"/>
  </delete>
  <select id="getByKey" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sms_account
    <include refid="pkWhere"/>
  </select>
  <select id="list" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sms_account
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPage" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sms_account
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listByExample" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sms_account
    <include refid="equalWhere"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sms_account
    <include refid="equalWhere"/>
    <include refid="orderBy"/>
  </select>
  <select id="listField" resultMap="resultMap">
    SELECT ${systemQueryFields}
    FROM oms_sms_account
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPageField" resultMap="resultMap">
    SELECT ${systemQueryFields}
    FROM oms_sms_account
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
</mapper>
