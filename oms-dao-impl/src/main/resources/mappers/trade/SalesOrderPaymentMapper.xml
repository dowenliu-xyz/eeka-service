<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.greatonce.oms.dao.trade.SalesOrderPaymentMapper">
  <resultMap id="resultMap" type="com.greatonce.oms.domain.trade.SalesOrderPayment">
    <id column="sales_order_payment_id" property="salesOrderPaymentId"/>
    <result column="actual_amount" property="actualAmount"/>
    <result column="created_time" property="createdTime"/>
    <result column="modified_time" property="modifiedTime"/>
    <result column="paid_time" property="paidTime"/>
    <result column="pay_type" property="payType"/>
    <result column="sales_order_id" property="salesOrderId"/>
  </resultMap>
  <sql id="columns">actual_amount,created_time,modified_time,paid_time,pay_type,sales_order_id,sales_order_payment_id</sql>
  <sql id="pkWhere">
    WHERE sales_order_payment_id=#{_parameter}
  </sql>
  <sql id="equalWhere">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="actualAmount!=null">AND actual_amount=#{actualAmount}</if>
      <if test="createdTime!=null">AND created_time=#{createdTime}</if>
      <if test="modifiedTime!=null">AND modified_time=#{modifiedTime}</if>
      <if test="paidTime!=null">AND paid_time=#{paidTime}</if>
      <if test="payType!=null">AND pay_type=#{payType}</if>
      <if test="salesOrderId!=null">AND sales_order_id=#{salesOrderId}</if>
      <if test="salesOrderPaymentId!=null">AND sales_order_payment_id=#{salesOrderPaymentId}</if>
    </trim>
  </sql>
  <sql id="where">
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="actualAmount!=null">AND actual_amount=#{actualAmount}</if>
      <if test="createdTimeBegin!=null">
        <![CDATA[AND created_time>=#{createdTimeBegin}]]>
      </if>
      <if test="createdTimeEnd!=null">
        <![CDATA[AND created_time<#{createdTimeEnd}]]>
      </if>
      <if test="modifiedTimeBegin!=null">
        <![CDATA[AND modified_time>=#{modifiedTimeBegin}]]>
      </if>
      <if test="modifiedTimeEnd!=null">
        <![CDATA[AND modified_time<#{modifiedTimeEnd}]]>
      </if>
      <if test="paidTimeBegin!=null">
        <![CDATA[AND paid_time>=#{paidTimeBegin}]]>
      </if>
      <if test="paidTimeEnd!=null">
        <![CDATA[AND paid_time<#{paidTimeEnd}]]>
      </if>
      <if test="payType!=null">AND pay_type=#{payType}</if>
      <if test="salesOrderId!=null">AND sales_order_id=#{salesOrderId}</if>
      <if test="salesOrderPaymentId!=null">AND sales_order_payment_id=#{salesOrderPaymentId}</if>
    </trim>
  </sql>
  <sql id="orderBy">
    ORDER BY sales_order_payment_id DESC
  </sql>
  <insert id="insert" parameterType="com.greatonce.oms.domain.trade.SalesOrderPayment">
    INSERT INTO oms_sales_order_payment(actual_amount,created_time,modified_time,paid_time,pay_type,sales_order_id,sales_order_payment_id)
    VALUES(
    <trim suffixOverrides=",">
      #{actualAmount},
      now(),
      now(),
      #{paidTime},
      #{payType},
      #{salesOrderId},
      #{salesOrderPaymentId},
    </trim>
    )
  </insert>
  <update id="update" parameterType="com.greatonce.oms.domain.trade.SalesOrderPayment">
    UPDATE oms_sales_order_payment
    <trim prefix="SET" suffixOverrides=",">
      <if test="actualAmount!=null">actual_amount=#{actualAmount},</if>
      modified_time=now(),
      <if test="paidTime!=null">paid_time=#{paidTime},</if>
      <if test="payType!=null">pay_type=#{payType},</if>
      <if test="salesOrderId!=null">sales_order_id=#{salesOrderId},</if>
    </trim>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      AND sales_order_payment_id=#{salesOrderPaymentId}
    </trim>
  </update>
  <update id="updateByExample" parameterType="com.greatonce.oms.domain.trade.SalesOrderPayment">
    UPDATE oms_sales_order_payment
    <trim prefix="SET" suffixOverrides=",">
      <if test="record.actualAmount!=null">
        actual_amount=#{record.actualAmount},
      </if>
      modified_time=now(),
      <if test="record.paidTime!=null">
        paid_time=#{record.paidTime},
      </if>
      <if test="record.payType!=null">
        pay_type=#{record.payType},
      </if>
      <if test="record.salesOrderId!=null">
        sales_order_id=#{record.salesOrderId},
      </if>
    </trim>
    <trim prefix="WHERE" prefixOverrides="AND|OR">
      <if test="example.actualAmount!=null">
      AND actual_amount=#{example.actualAmount}
      </if>
      <if test="example.createdTime!=null">
      AND created_time=#{example.createdTime}
      </if>
      <if test="example.modifiedTime!=null">
      AND modified_time=#{example.modifiedTime}
      </if>
      <if test="example.paidTime!=null">
      AND paid_time=#{example.paidTime}
      </if>
      <if test="example.payType!=null">
      AND pay_type=#{example.payType}
      </if>
      <if test="example.salesOrderId!=null">
      AND sales_order_id=#{example.salesOrderId}
      </if>
      <if test="example.salesOrderPaymentId!=null">
      AND sales_order_payment_id=#{example.salesOrderPaymentId}
      </if>
    </trim>
  </update>
  <delete id="delete">
    DELETE FROM oms_sales_order_payment
    <include refid="pkWhere"/>
  </delete>
  <delete id="deleteByExample">
    DELETE FROM oms_sales_order_payment
    <include refid="equalWhere"/>
  </delete>
  <select id="getByKey" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sales_order_payment
    <include refid="pkWhere"/>
  </select>
  <select id="list" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sales_order_payment
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPage" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sales_order_payment
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listByExample" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sales_order_payment
    <include refid="equalWhere"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
    <include refid="columns"/>
    FROM oms_sales_order_payment
    <include refid="equalWhere"/>
    <include refid="orderBy"/>
  </select>
  <select id="listField" resultMap="resultMap">
    SELECT ${systemQueryFields}
    FROM oms_sales_order_payment
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
  <select id="listPageField" resultMap="resultMap">
    SELECT ${systemQueryFields}
    FROM oms_sales_order_payment
    <include refid="where"/>
    <include refid="orderBy"/>
  </select>
</mapper>
